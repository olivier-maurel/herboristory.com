<script> 'use strict';

/**
 * Retourne un tableau des parametres de l'URL actuel
 * @return string parameters
 */
function getParameters()
{
    var url    = window.location.search.substring(1);
    var varUrl = url.split('&');
    var parameters = {};

    $.each(varUrl, function(k,v){
        let item = v.split('=');
        parameters[item[0]] = item[1];
    });

    return parameters;
}

/**
 * Retourne les paramètres destiné à une URL
 * @param array parameters
 * @return string urlParams
 */
function setParameters(parameters)
{
    if (Object.keys(parameters).length == 0)
        return '/';

    var urlParams   = '?';

    $.each(parameters, function(k,v){
        if (k !== '')
            urlParams = urlParams + k + '=' + v + '&';
    });

    return urlParams.slice(0, -1);
}

/**
 * Ajoute un paramètre
 * @param array parameters
 * @param array item
 * @return array parameters
 */
function addParameter(parameters, item)
{
    if (item[1] != "")
        parameters[item[0]] = item[1];
    else 
        delete parameters[item[0]];

    return parameters;
};

/**
 * Ajoute une animation de chargement AJAX
 * @param object target
 * @return object container
 */
function setSpinner(target, margin = true)
{
    var parent = target.parent();

    if (parent.children('.spinner-container').length > 0)
        return parent.find('.spinner-container').fadeIn('fast');

    var container = $('<div/>').addClass('spinner-container position-absolute w-100 h-100 top-0 start-0 bg-white').hide().appendTo(parent).fadeIn('fast');
    var spinner = $('<div/>').addClass('sk-circle').appendTo(container);
    
    if (margin === false)
        spinner.css({'margin': 'auto'});

    for (let i = 1; i <= 12; i++) {
        $('<div/>').addClass('sk-circle'+i+' sk-child').appendTo(spinner);
    }

    return container;
}

/**
 * Trie les posts en ajoutant un filtre
 * @param string type 
 * @param string filter
 * @return null 
 */
function setSearch(type, filter)
{
    var parameters    = addParameter(getParameters(), [type, filter]);
    var urlParameters = setParameters(parameters);
    
    // Redirige l'utilisateur n'est pas sur la page "/search"
    if ("{{ app.request.attributes.get('_route') }}" !== 'app_search')
        window.location.replace("{{ path('app_search') }}" + urlParameters);

    // Génère l'url
    window.history.pushState( {} , '', urlParameters);

    // Génère l'animation de chargement
    $('#listingPostsContainer').fadeOut(100);
    var spinner = setSpinner($('#listingPostsContainer'));

    var queryParameters = {
        route: "{{ app.request.attributes.get('_route') }}",
        query: parameters['query'], 
        type: parameters['type'], 
        list: parameters['list'] 
    };

    $.get("{{ path('app_search') }}", queryParameters, 
        function(data) {
            if (data.response === true)
                window.location.replace("{{ path('app_search') }}" + urlParameters);

            $('#listingPostsContainer').html(data.response);///// TODO: ERROR HERE
            $('#listingPostsContainer').fadeIn('fast');///// TODO: ERROR HERE
            spinner.fadeOut('slow');
            $('<li/>').addClass('grid-sizer position-absolute').prependTo($('#listingPostsContainer'));
            $('.header-search-icon.search-form-wrapper').removeClass('active-form');
        }
    );
}

function setPagination(page)
{
    var used = false, locked = false;

    $(window).scroll(function () {
        //I shortened conditions (for a boolean, "!used" is same as "used == false")
        if ($(window).scrollTop() >= $(document).height() - $(window).height() - 50 && used === false && locked === false) {
            //lock function before the call
            var spinner = setSpinner($('#loaderPaginator'), false);
            var parameters = getParameters();
            // parameters = addParameter(parameters, ['p', ((parameters['p']) ? parseInt(parameters['p']) + 1 : 2)])
            var queryParameters = {
                route: "{{ app.request.attributes.get('_route') }}",
                query: parameters['query'], 
                type: parameters['type'], 
                list: parameters['list'],
                page: page = page + 1
            };

            window.history.pushState( {} , '', setParameters(parameters));
            console.log('OK');
            locked = true;
            $.get("{{ path('app_search') }}", queryParameters, 
                function(data) {
                    $('#listingPostsContainer').append(data.response);
                    used = true;
                    locked = false;
                    spinner.parent().fadeOut('slow');
                    setTimeout(function(){
                        spinner.parent().remove();
                    }, 100)
                    if (data.limit !== true)
                        setPagination(page);
                }
            ).fail(function(){
                console.log('request has failed');
                locked = false;
            });
        }
    });
}

</script>